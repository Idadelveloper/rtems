#!/usr/bin/python3

import configparser
import os
import re
import subprocess
import sys
from git import Repo


dir_list = os.getcwd()

# Gets the modes assigned by the user in the git config file.
def getModes():
    repo = Repo('.', search_parent_directories=True)
    reader = repo.config_reader()
    try:
        mode = str(reader.get_value("style","mode"))
    except (configparser.NoSectionError, configparser.NoOptionError):
        mode = None

    try:
        verbose = str(reader.get_value("style","verbose"))
    except (configparser.NoSectionError, configparser.NoOptionError):
        verbose = None
    return mode, verbose


def getDiff():
    cmd = "git diff -U0 --no-color --staged  HEAD --$dir_list | clang-format-diff -p1 -style=file"

    # Execute the format command
    diff = subprocess.getoutput(cmd)
    return diff


def handleErrors(modes):
    mode = modes[0]
    verbose = modes[1]
    print("\033[3;34;34m Checking for style differences...\033[0;0m")

    output = getDiff().split("\n")
    files = []
    num_diff = 0
    for line in output:
        if verbose == "verbose":
            if line.startswith("+"):
                num_diff += 1
                print("\033[1;34;34m" + line + "\033[0;0m")
            else:
                print(line)
        elif line.startswith("+"):
                num_diff += 1
        if line.startswith("+++"):
            file = str(re.sub('[+]', '', line))
            file = file.replace("(after formatting)", "").strip()
            files.append(file)
            output.remove(line)
    print(" \n \033[1;33;33m Files affected: \033[0;0m")
    for file in files:
        print(file)

    message = "You have about a total of " + str(num_diff) + " style issue(s) in the " + \
        str(len(files)) + " file(s) listed above"
    print("\n \033[1;31;33m" + "StyleWarning: " + message + "\033[0;0m")

    if mode == "nonstrict":
        print("\033[1;31;31m Your style issues were ignored \033[0;0m")
        sys.exit(0)
    print("\033[1;31;31m ERROR: Commit aborted due to code format inconsistencies" \
         " with RTEMS \033[0;0m")


rv = len(getDiff())
if rv == 0:
  print("\033[1;34;34m Everything is clean - style matches RTEMS \033[0;0m")
else:
  handleErrors(getModes())
sys.exit(rv)
